type Query {
  getAssetData(date: String!): AssetData
  getStatistics(dateAndTime: String!): Statistics
  healthFactors(PageInput: PageInput): HealthFactorsOutput!
}

input PageInput {
    nextToken: String
    limit: Int
}

type HealthFactorsOutput {
    items: [HealthFactor!]!
    nextToken: String
}


type AssetData {
    id: ID!
    timestamp: String!
    poolData: PoolData!
    reservesIncentives: [ReservesIncentivesData!]!
}

type ReservesIncentivesData {
    underlyingAsset: String!
    lIncentiveData: IncentivesWithFeeds!
    vdIncentiveData: IncentivesWithFeeds!
    sdIncentiveData: IncentivesWithFeeds!
}

type IncentivesWithFeeds {
    priceFeed: String!
    emissionPerSecond: String!
    incentivesLastUpdateTimestamp: Int!
    tokenIncentivesIndex: String!
    emissionEndTimestamp: Int!
    tokenAddress: String!
    rewardTokenAddress: String!
    incentiveControllerAddress: String!
    rewardTokenDecimals: Int!
    precision: Int!
}

type PoolData {
    baseCurrencyData: BaseCurrencyData!
    reservesData: [ReservesData!]!
}

type BaseCurrencyData {
    networkBaseTokenPriceInUsd: String!
    networkBaseTokenPriceDecimals: Int!
    marketReferenceCurrencyPriceInUsd: String!
    marketReferenceCurrencyDecimals: Int!
}

type HealthFactor {
    id: ID! ## account address
    timestamp: String!
    number: Float! ## health factor
}

type Statistics {
  id: ID!
  data: String!
  timestamp: String!
  uniqueDepositedUsers: Int!
  uniqueBorrowedUsers: Int!
  depositTxCount: Int!
  borrowTxCount: Int!
}

type ReservesData {
    priceInMarketReferenceCurrency: String!
    symbol: String!
    stableDebtTokenAddress: String!
    reserveLiquidationThreshold: String!
    availableLiquidity: String!
    variableRateSlope2: String!
    variableRateSlope1: String!
    stableBorrowRate: String!
    stableBorrowRateEnabled: Boolean!
    stableDebtLastUpdateTimestamp: Int!
    totalScaledVariableDebt: String!
    underlyingAsset: String!
    isActive: Boolean!
    lastUpdateTimestamp: Int!
    totalPrincipalStableDebt: String!
    baseLTVasCollateral: String!
    id: String!
    variableBorrowIndex: String!
    reserveFactor: String!
    isFrozen: Boolean!
    reserveLiquidationBonus: String!
    borrowingEnabled: Boolean!
    variableBorrowRate: String!
    interestRateStrategyAddress: String!
    stableRateSlope2: String!
    stableRateSlope1: String!
    liquidityRate: String!
    usageAsCollateralEnabled: Boolean!
    decimals: Int!
    averageStableRate: String!
    name: String!
    lTokenAddress: String!
    liquidityIndex: String!
    variableDebtTokenAddress: String!
}
